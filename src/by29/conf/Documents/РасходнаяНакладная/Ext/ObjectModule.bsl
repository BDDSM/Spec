
Процедура ОбработкаПроведения(Отказ, Режим)
	ВидыСубконтоНоменклатура = ПланыВидовХарактеристик.ВидыСубконто.Номенклатура;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ВидыСубконтоНоменклатура, "Номенклатура");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, Дата));
	Блокировка.Заблокировать();
	
	Движения.Проводки.Записывать = Истина;
	Движения.Проводки.Очистить();
	Движения.Проводки.Записать();
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Номенклатура КАК Комплект,
		|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяТовары.Сумма) КАК Сумма
		|ПОМЕСТИТЬ втТЧ
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТЧ.Комплект КАК Комплект,
		|	втТЧ.Количество КАК Количество,
		|	втТЧ.Сумма КАК Сумма,
		|	ЕСТЬNULL(ПроводкиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ПроводкиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	втТЧ.Количество - ЕСТЬNULL(ПроводкиОстатки.КоличествоОстаток, 0) КАК Нехватка
		|ПОМЕСТИТЬ втОстаткиКомплектов
		|ИЗ
		|	втТЧ КАК втТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Проводки.Остатки(
		|				&МоментВремени,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Товары),
		|				,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						втТЧ.Комплект
		|					ИЗ
		|						втТЧ КАК втТЧ)) КАК ПроводкиОстатки
		|		ПО втТЧ.Комплект = ПроводкиОстатки.Субконто1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстаткиКомплектов.Комплект КАК Комплект,
		|	втОстаткиКомплектов.Нехватка * СоставКомплектов.Количество КАК КоличествоКомплектующих,
		|	СоставКомплектов.Комплектующее КАК Комплектующее
		|ПОМЕСТИТЬ втСписываемыеКомплектующие
		|ИЗ
		|	втОстаткиКомплектов КАК втОстаткиКомплектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставКомплектов КАК СоставКомплектов
		|		ПО втОстаткиКомплектов.Комплект = СоставКомплектов.Комплект
		|ГДЕ
		|	втОстаткиКомплектов.Нехватка > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комплектующее
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втСписываемыеКомплектующие.Комплектующее КАК Комплектующее
		|ИЗ
		|	втСписываемыеКомплектующие КАК втСписываемыеКомплектующие";
	
	
	Результат = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Результат;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ВидыСубконтоНоменклатура, "Комплектующее");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, Дата));
	Блокировка.Заблокировать();
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	втСписываемыеКомплектующие.Комплектующее КАК Комплектующее,
		|	втСписываемыеКомплектующие.Комплектующее.Представление КАК НаименованиеКомплектующего,
		|	втСписываемыеКомплектующие.Комплект КАК Комплект,
		|	втСписываемыеКомплектующие.КоличествоКомплектующих КАК КоличествоКомплектующих,
		|	ЕСТЬNULL(ПроводкиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ПроводкиОстатки.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	втСписываемыеКомплектующие КАК втСписываемыеКомплектующие
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Проводки.Остатки(
		|				&МоментВремени,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Товары),
		|				,
		|				Субконто1 В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						втСписываемыеКомплектующие.Комплектующее
		|					ИЗ
		|						втСписываемыеКомплектующие КАК втСписываемыеКомплектующие)) КАК ПроводкиОстатки
		|		ПО втСписываемыеКомплектующие.Комплектующее = ПроводкиОстатки.Субконто1
		|ИТОГИ
		|	МАКСИМУМ(НаименованиеКомплектующего),
		|	СУММА(КоличествоКомплектующих),
		|	МАКСИМУМ(КоличествоОстаток)
		|ПО
		|	Комплектующее
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстаткиКомплектов.Комплект КАК Комплект,
		|	втОстаткиКомплектов.Количество КАК Количество,
		|	втОстаткиКомплектов.Сумма КАК Сумма,
		|	втОстаткиКомплектов.КоличествоОстаток КАК КоличествоОстаток,
		|	втОстаткиКомплектов.СуммаОстаток КАК СуммаОстаток,
		|	втОстаткиКомплектов.Нехватка КАК Нехватка
		|ИЗ
		|	втОстаткиКомплектов КАК втОстаткиКомплектов";
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	ИндексКрайнегоПакета = РезультатПакет.Количество() - 1;
	
	ТЗКомплекты = РезультатПакет[ИндексКрайнегоПакета].Выгрузить();
	ТЗКомплекты.Колонки.Добавить("СебестоимостьКомплекта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	ТЗКомплекты.Индексы.Добавить("Комплект");
	
	ВыборкаКомплектущие = РезультатПакет[ИндексКрайнегоПакета-1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаКомплектущие.Следующий() Цикл
		Нехватка = ВыборкаКомплектущие.КоличествоКомплектующих - ВыборкаКомплектущие.КоличествоОстаток;
		Если Нехватка > 0 Тогда
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Не хватает комплектующего %1 в количестве %2 шт", ВыборкаКомплектущие.НаименованиеКомплектующего, Нехватка);
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если Отказ Тогда Продолжить; КонецЕсли;
		
		ВыборкаКомплекты = ВыборкаКомплектущие.Выбрать();
		Пока ВыборкаКомплекты.Следующий() Цикл
			Себестоимость = ?(ВыборкаКомплекты.КоличествоКомплектующих = ВыборкаКомплекты.КоличествоОстаток,
					ВыборкаКомплекты.СуммаОстаток,
					ВыборкаКомплекты.КоличествоКомплектующих * ВыборкаКомплекты.СуммаОстаток / ВыборкаКомплекты.КоличествоОстаток);
			
			Движение = Движения.Проводки.Добавить();
			Движение.СчетДт			 = ПланыСчетов.Управленческий.ОбщехозяйственныеЗатраты;
			Движение.СчетКт			 = ПланыСчетов.Управленческий.Товары;
			Движение.Период			 = Дата;
			Движение.Сумма			 = Себестоимость;
			Движение.КоличествоКТ	 = ВыборкаКомплекты.КоличествоКомплектующих;
			Движение.СубконтоКт[ВидыСубконтоНоменклатура] = ВыборкаКомплекты.Комплектующее;
			
			СтрокаТЗ = ТЗКомплекты.Найти(ВыборкаКомплекты.Комплект, "Комплект");
			СтрокаТЗ.СебестоимостьКомплекта = СтрокаТЗ.СебестоимостьКомплекта + Себестоимость + ВыборкаКомплекты.КоличествоКомплектующих * 5;
		КонецЦикла;
	КонецЦикла;

	Если Отказ Тогда Возврат; КонецЕсли;
	
	Для Каждого СтрокаТЗ Из ТЗКомплекты Цикл
		Если СтрокаТЗ.Нехватка <= 0 Тогда Продолжить; КонецЕсли;
		
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт			 = ПланыСчетов.Управленческий.Товары;
		Движение.СчетКт			 = ПланыСчетов.Управленческий.ОбщехозяйственныеЗатраты;
		Движение.Период			 = Дата;
		Движение.Сумма			 = СтрокаТЗ.СебестоимостьКомплекта;
		Движение.КоличествоДт	 = СтрокаТЗ.Нехватка;
		Движение.СубконтоДт[ВидыСубконтоНоменклатура] = СтрокаТЗ.Комплект;
	КонецЦикла;
	
	Для Каждого СтрокаТЗ Из ТЗКомплекты Цикл
		Себестоимость = ?(СтрокаТЗ.Нехватка >= 0,
				СтрокаТЗ.СуммаОстаток,
				СтрокаТЗ.Количество * СтрокаТЗ.СуммаОстаток / СтрокаТЗ.КоличествоОстаток);
		
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт			 = ПланыСчетов.Управленческий.ПрибылиУбытки;
		Движение.СчетКт			 = ПланыСчетов.Управленческий.Товары;
		Движение.Период			 = Дата;
		Движение.Сумма			 = СтрокаТЗ.СебестоимостьКомплекта + Себестоимость;
		Движение.КоличествоКт	 = СтрокаТЗ.Количество;
		Движение.СубконтоДт[ВидыСубконтоНоменклатура] = СтрокаТЗ.Комплект;
		Движение.СубконтоКт[ВидыСубконтоНоменклатура] = СтрокаТЗ.Комплект;
		
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт	 = ПланыСчетов.Управленческий.Покупатели;
		Движение.СчетКт	 = ПланыСчетов.Управленческий.ПрибылиУбытки;
		Движение.Период	 = Дата;
		Движение.Сумма	 = СтрокаТЗ.Сумма;
		Движение.СубконтоКт[ВидыСубконтоНоменклатура] = СтрокаТЗ.Комплект;
	КонецЦикла;
КонецПроцедуры
