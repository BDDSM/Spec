
&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	РассчитатьСуммуВТекущейСтроке();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	РассчитатьСуммуВТекущейСтроке();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВТекущейСтроке()
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	
	Для Каждого ЭлементПеретаскивания Из ПараметрыПеретаскивания.Значение Цикл
		Номенклатура = НоменклатураПеретаскивания(ЭлементПеретаскивания);
		Для Каждого Элемент Из Номенклатура Цикл
			Стр = Объект.Товары.Добавить();
			Стр.Номенклатура = Элемент;
			Стр.Количество   = 1;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка", , ЭтаФорма, ВариантОткрытияОкна.ОтдельноеОкно);
КонецПроцедуры

&НаСервереБезКонтекста
Функция НоменклатураПеретаскивания(Данные)
	фРезультат = Новый Массив;
	
	Если Данные.ЭтоГруппа Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Родитель = &Родитель
			|	И НЕ Номенклатура.ЭтоГруппа"
		);
		
		Запрос.УстановитьПараметр("Родитель", Данные);
		
		фРезультат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Иначе
		фРезультат.Добавить(Данные);
	КонецЕсли;
	
	Возврат фРезультат;
КонецФункции
