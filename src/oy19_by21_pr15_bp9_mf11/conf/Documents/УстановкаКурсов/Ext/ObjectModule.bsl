
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.КурсыВалют.Очистить();
	Движения.Проводки.Очистить();
	
	Движения.Проводки.Записать();
	
	Движения.КурсыВалют.Записывать = Истина;
	Движения.Проводки.Записывать = Истина;
	
	ТекущийМесяц = НачалоМесяца(Дата);
	
	ВидСубконтоКонтрагент = ПланыВидовХарактеристик.ВидыСубконто.Контрагент;
	ВидСубконтоВалюта     = ПланыВидовХарактеристик.ВидыСубконто.Валюта;
	ВидСубконтоДокумент   = ПланыВидовХарактеристик.ВидыСубконто.Документ;
	
	СчетПокупатели    = ПланыСчетов.Управленческий.Покупатели;
	СчетПрибылиУбытки = ПланыСчетов.Управленческий.ПрибылиУбытки;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Счет", СчетПокупатели);
	ЭлементБлокировки.ИсточникДанных = Курсы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Субконто1", "Контрагент");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Субконто2", "Валюта");
	Блокировка.Заблокировать();
	
	Для Каждого ТекСтрока Из Курсы Цикл
		Запись = Движения.КурсыВалют.Добавить();
		Запись.Период     = ТекущийМесяц;
		Запись.Валюта     = ТекСтрока.Валюта;
		Запись.Контрагент = ТекСтрока.Контрагент;
		Запись.Курс       = ТекСтрока.Курс;
	КонецЦикла;
	
	// Корректирующие проводки
	Субконто = Новый Массив;
	Субконто.Добавить(ВидСубконтоКонтрагент);
	Субконто.Добавить(ВидСубконтоВалюта);
	Субконто.Добавить(ВидСубконтоДокумент);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	УстановкаКурсовКурсы.Контрагент КАК Контрагент,
		|	УстановкаКурсовКурсы.Валюта КАК Валюта,
		|	УстановкаКурсовКурсы.Курс КАК КурсУЕ
		|ПОМЕСТИТЬ втТЧ
		|ИЗ
		|	Документ.УстановкаКурсов.Курсы КАК УстановкаКурсовКурсы
		|ГДЕ
		|	УстановкаКурсовКурсы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПроводкиОбороты.Субконто1 КАК Контрагент,
		|	ПроводкиОбороты.Субконто2 КАК Валюта,
		|	ПроводкиОбороты.Субконто3 КАК Документ,
		|	втТЧ.КурсУЕ КАК КурсУЕ,
		|	ЕСТЬNULL(ПроводкиОбороты.СуммаУЕОборот, 0) КАК СуммаУЕОборот,
		|	ЕСТЬNULL(ПроводкиОбороты.СуммаОборот, 0) КАК СуммаОборот,
		|	ВЫБОР ЕСТЬNULL(ПроводкиОбороты.СуммаУЕОборот, 0)
		|		КОГДА 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ПроводкиОбороты.СуммаОборот, 0) / ПроводкиОбороты.СуммаУЕОборот
		|	КОНЕЦ КАК КурсПроводки,
		|	ВЫРАЗИТЬ(ПроводкиОбороты.Субконто3 КАК Документ.РасходнаяНакладная).Курс КАК КурсДокумента
		|ИЗ
		|	втТЧ КАК втТЧ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Проводки.Обороты(&ДатаНачала, &ДатаОкончания, , Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Покупатели), &Субконто, , , ) КАК ПроводкиОбороты
		|		ПО втТЧ.Контрагент = ПроводкиОбороты.Субконто1
		|			И втТЧ.Валюта = ПроводкиОбороты.Субконто2
		|ГДЕ
		|	втТЧ.КурсУЕ <> ВЫБОР ЕСТЬNULL(ПроводкиОбороты.СуммаУЕОборот, 0)
		|			КОГДА 0
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(ПроводкиОбороты.СуммаОборот, 0) / ПроводкиОбороты.СуммаУЕОборот
		|		КОНЕЦ"
	);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаНачала", ТекущийМесяц);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Субконто", Субконто);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Проводка = Движения.Проводки.Добавить();
		Проводка.Период = Дата;
		
		Если Выборка.КурсУЕ > Выборка.КурсПроводки Тогда
			Проводка.СчетДт = СчетПокупатели;
			Проводка.СчетКт = СчетПрибылиУбытки;
			Проводка.Сумма  = Выборка.СуммаУЕОборот * (Выборка.КурсУЕ - Выборка.КурсПроводки);
			Проводка.СубконтоДт[ВидСубконтоКонтрагент] = Выборка.Контрагент;
			Проводка.СубконтоДт[ВидСубконтоВалюта]     = Выборка.Валюта;
			Проводка.СубконтоДт[ВидСубконтоДокумент]   = Выборка.Документ;
		Иначе
			Проводка.СчетДт = СчетПрибылиУбытки;
			Проводка.СчетКт = СчетПокупатели;
			Проводка.Сумма  = Выборка.СуммаУЕОборот * (Выборка.КурсПроводки - Выборка.КурсУЕ);
			Проводка.СубконтоКт[ВидСубконтоКонтрагент] = Выборка.Контрагент;
			Проводка.СубконтоКт[ВидСубконтоВалюта]     = Выборка.Валюта;
			Проводка.СубконтоКт[ВидСубконтоДокумент]   = Выборка.Документ;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
