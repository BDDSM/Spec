
Процедура ЗаполнитьНаборЗаписей(ТекстЗапроса, Ссылка, НаборЗаписей) Экспорт
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	КонецЦикла;
КонецПроцедуры

Процедура РассчитатьЗаписиРегистраРасчета(НаборЗаписей, Выборка) Экспорт
	НормаЧасовВНеделю = Константы.НормаЧасовВНеделю.Получить();
	ВидРасчетаОплатаПоТарифу = ПланыВидовРасчета.ОсновныеНачисления.ОплатаПоТарифу;
	ВидРасчетаБольничный = ПланыВидовРасчета.ОсновныеНачисления.Больничный;
	ВидРасчетаКомпенсацияЗатрат = ПланыВидовРасчета.ДополнительныеНачисления.КомпенсацияЗатрат;
	ВидРасчетаПереработка = ПланыВидовРасчета.ДополнительныеНачисления.Переработка;
	
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей[Выборка.НомерСтроки-1];
		
		Результат = 0;
		
		Если Выборка.ВидРасчета = ВидРасчетаОплатаПоТарифу Тогда
			Результат = Запись.Размер * Выборка.Факт;
			Запись.ОтработаноЧасов = Выборка.Факт;
		ИначеЕсли Выборка.ВидРасчета = ВидРасчетаБольничный И Выборка.ОтработаноЧасовБаза <> 0 Тогда
			Результат = Выборка.Факт * Выборка.РезультатБаза / Выборка.ОтработаноЧасовБаза;
		ИначеЕсли Выборка.ВидРасчета = ВидРасчетаКомпенсацияЗатрат Тогда
			Результат = Выборка.СуммаЗатрат;
		ИначеЕсли Выборка.ВидРасчета = ВидРасчетаПереработка Тогда
			Переработка = Макс(Выборка.ОтработаноЧасовБаза - НормаЧасовВНеделю, 0);
			Результат = Переработка * 100;
			Запись.ЧасыПереработки = Переработка;
		КонецЕсли;
		
		Запись.Результат = Результат;
	КонецЦикла;
КонецПроцедуры
