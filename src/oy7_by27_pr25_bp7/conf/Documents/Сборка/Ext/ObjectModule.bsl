
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ВидСубконтоСклады		 = ПланыВидовХарактеристик.ВидыСубконто.Склады;
	ВидСубконтоНоменклатура	 = ПланыВидовХарактеристик.ВидыСубконто.Номенклатура;
	ВидСубконтоКонтрагенты	 = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты;
	
	СчетТовары						 = ПланыСчетов.Управленческий.Товары;
	СчетОсновноеПроизводство		 = ПланыСчетов.Управленческий.ОсновноеПроизводство;
	СчетВспомогательноеПроизводство	 = ПланыСчетов.Управленческий.ВспомогательноеПроизводство;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СборкаСостав.Комплектующее КАК Комплектующее,
		|	СУММА(СборкаСостав.Количество) КАК Количество
		|ПОМЕСТИТЬ втТЧ
		|ИЗ
		|	Документ.Сборка.Состав КАК СборкаСостав
		|ГДЕ
		|	СборкаСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СборкаСостав.Комплектующее
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комплектующее
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТЧ.Комплектующее КАК Комплектующее
		|ИЗ
		|	втТЧ КАК втТЧ");
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ВидСубконтоНоменклатура, "Комплектующее");
	ЭлементБлокировки.УстановитьЗначение("Субконто2", СкладОтправитель);
	ЭлементБлокировки.УстановитьЗначение("Счет", СчетТовары);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, Дата));
	Блокировка.Заблокировать();
	
	Движения.Проводки.Записывать = Истина;
	Движения.Проводки.Очистить();
	Движения.Проводки.Записать();
	
	СебестоимостьКомплекта = 0;
	
	мСубконто = Новый Массив;
	мСубконто.Добавить(ВидСубконтоНоменклатура);
	мСубконто.Добавить(ВидСубконтоСклады);
	мСубконто.Добавить(ВидСубконтоКонтрагенты);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	втТЧ.Комплектующее КАК Комплектующее,
		|	втТЧ.Количество КАК Количество,
		|	ЕСТЬNULL(ПроводкиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(ПроводкиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	втТЧ КАК втТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Проводки.Остатки(
		|				&МоментВремени,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Товары),
		|				&мСубконто,
		|				Субконто1 В
		|						(ВЫБРАТЬ
		|							втТЧ.Комплектующее
		|						ИЗ
		|							втТЧ)
		|					И Субконто2 = &Склад) КАК ПроводкиОстатки
		|		ПО втТЧ.Комплектующее = ПроводкиОстатки.Субконто1";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("мСубконто", мСубконто);
	Запрос.УстановитьПараметр("Склад", СкладОтправитель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Нехватка = Выборка.Количество - Выборка.КоличествоОстаток;
		Если Нехватка > 0 Тогда
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("На складе %1 не хватает %2 в количестве %3 шт.", СкладОтправитель, Выборка.Комплектующее, Нехватка);
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если Отказ Тогда Продолжить; КонецЕсли;
		
		Себестоимость = ?(Выборка.Количество = Выборка.КоличествоОстаток,
				Выборка.СуммаОстаток,
				Выборка.Количество * Выборка.СуммаОстаток / Выборка.КоличествоОстаток);
				
		Движение = Движения.Проводки.Добавить();
		Движение.Период								 = Дата;
		Движение.СчетДт								 = СчетОсновноеПроизводство;
		Движение.СчетКт								 = СчетТовары;
		Движение.СубконтоКт[ВидСубконтоНоменклатура] = Выборка.Комплектующее;
		Движение.СубконтоКт[ВидСубконтоСклады]		 = СкладОтправитель;
		Движение.КоличествоКт						 = Выборка.Количество;
		Движение.Сумма								 = Себестоимость;
		
		СебестоимостьКомплекта = СебестоимостьКомплекта + Себестоимость;
	КонецЦикла;
	
	Движение = Движения.Проводки.Добавить();
	Движение.Период								 = Дата;
	Движение.СчетДт								 = СчетТовары;
	Движение.СчетКт								 = СчетОсновноеПроизводство;
	Движение.СубконтоДт[ВидСубконтоНоменклатура] = Комплект;
	Движение.СубконтоДт[ВидСубконтоСклады]		 = СкладПолучатель;
	Движение.СубконтоДт[ВидСубконтоКонтрагенты]	 = Покупатель;
	Движение.КоличествоДт						 = Количество;
	Движение.Сумма								 = СебестоимостьКомплекта;
	
	Движение = Движения.Проводки.Добавить();
	Движение.Период								 = Дата;
	Движение.СчетДт								 = СчетТовары;
	Движение.СчетКт								 = СчетВспомогательноеПроизводство;
	Движение.СубконтоДт[ВидСубконтоНоменклатура] = Комплект;
	Движение.СубконтоДт[ВидСубконтоСклады]		 = СкладПолучатель;
	Движение.СубконтоДт[ВидСубконтоКонтрагенты]	 = Покупатель;
	Движение.Сумма								 = СуммаСборки;
КонецПроцедуры
