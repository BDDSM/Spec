
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ЗадолженностьПоОплате");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Движения.ЗадолженностьПоОплате.Очистить();
	Движения.ЗадолженностьПоОплате.Записать();
	Движения.ЗадолженностьПоОплате.Записывать = Истина;
	
	Движения.НачислениеПеней.Очистить();
	Движения.НачислениеПеней.Записать();
	Движения.НачислениеПеней.Записывать = Истина;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Задолженность.Контрагент КАК Контрагент,
		|	Задолженность.Счет КАК Счет,
		|	РАЗНОСТЬДАТ(НачислениеПеней.ДатаНачисленияПеней, &Дата, ДЕНЬ) * Задолженность.Счет.ПроцентПени / 100 * Задолженность.СуммаОстаток КАК Пени
		|ИЗ
		|	РегистрНакопления.ЗадолженностьПоОплате.Остатки КАК Задолженность
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеПеней.СрезПоследних КАК НачислениеПеней
		|		ПО Задолженность.Счет = НачислениеПеней.Счет
		|ГДЕ
		|	РАЗНОСТЬДАТ(НачислениеПеней.ДатаНачисленияПеней, &Дата, ДЕНЬ) > 0");
	
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ЗадолженностьПоОплате.ДобавитьПриход();
		Движение.Период		 = Дата;
		Движение.Контрагент	 = Выборка.Контрагент;
		Движение.Счет		 = Выборка.Счет;
		Движение.Сумма		 = Выборка.Пени;
		
		Движение = Движения.НачислениеПеней.Добавить();
		Движение.Период				 = Дата;
		Движение.Счет				 = Выборка.Счет;
		Движение.ДатаНачисленияПеней = Дата;
	КонецЦикла;
КонецПроцедуры
